// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import React, { useEffect, useState } from "react";
import { PlasmicYmdhmInput } from "./plasmic/easytime/PlasmicYmdhmInput";
import { dateToMinstamp, minstampToDate, sanitizeNaN } from "../utils/date";

type Props = {
  /** minutestamp */
  value: number;
  /** onChange */
  onChange: (value: number) => void;
};
function YmdhmInput({ value, onChange }: Props) {
  const [year, setYear] = useState("");
  const [month, setMonth] = useState("");
  const [day, setDay] = useState("");
  const [hour, setHour] = useState("");
  const [minute, setMinute] = useState("");

  useEffect(() => {
    const date = minstampToDate(value);
    setYear(date.getFullYear().toString());
    setMonth((date.getMonth() + 1).toString());
    setDay(date.getDate().toString());
    setHour(date.getHours().toString());
    setMinute(date.getMinutes().toString());
  }, [value]);

  useEffect(() => {
    const date = new Date(
      parseInt(year),
      parseInt(month) - 1,
      parseInt(day),
      parseInt(hour),
      parseInt(minute)
    );
    const minstamp = dateToMinstamp(date);
    if (isNaN(minstamp) || minstamp < 0) {
      return;
    }
    onChange(minstamp);
  }, [year, month, day, hour, minute, onChange]);
  return (
    <PlasmicYmdhmInput
      year={{
        value: year,
        onChange: (e) => {
          setYear(e.target.value.slice(-4));
        },
      }}
      month={{
        value: month,
        onChange: (e) => {
          setMonth(e.target.value.slice(-2));
        },
      }}
      day={{
        value: day,
        onChange: (e) => {
          setDay(e.target.value.slice(-2));
        },
      }}
      hour={{
        value: hour,
        onChange: (e) => {
          setHour(e.target.value.slice(-2));
        },
      }}
      minute={{
        value: minute,
        onChange: (e) => {
          setMinute(e.target.value.slice(-2));
        },
      }}
    />
  );
}

export default YmdhmInput;
